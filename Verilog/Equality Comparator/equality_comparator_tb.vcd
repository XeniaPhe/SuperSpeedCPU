$date
	Thu Jan 05 08:11:50 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module equality_comparator_tb $end
$var wire 1 ! s $end
$var reg 1 " be_select $end
$var reg 20 # i0 [19:0] $end
$var reg 20 $ i1 [19:0] $end
$scope module comp $end
$var wire 1 " be_select $end
$var wire 20 % i0 [19:0] $end
$var wire 20 & i1 [19:0] $end
$var wire 1 ! s $end
$var wire 1 ' select_not $end
$var wire 1 ( not_eq $end
$var wire 20 ) b_xor [19:0] $end
$scope module bwxor $end
$var wire 20 * i0 [19:0] $end
$var wire 20 + i1 [19:0] $end
$var wire 20 , s [19:0] $end
$scope begin genblk1[0] $end
$var parameter 2 - i $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 . i $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 / i $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 0 i $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 1 i $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 2 i $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 3 i $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 4 i $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 5 i $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 6 i $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 7 i $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 8 i $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 9 i $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 : i $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 ; i $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 < i $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 = i $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 > i $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 ? i $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 @ i $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10011 @
b10010 ?
b10001 >
b10000 =
b1111 <
b1110 ;
b1101 :
b1100 9
b1011 8
b1010 7
b1001 6
b1000 5
b111 4
b110 3
b101 2
b100 1
b11 0
b10 /
b1 .
b0 -
$end
#0
$dumpvars
b0 ,
b0 +
b0 *
b0 )
0(
1'
b0 &
b0 %
b0 $
b0 #
0"
0!
$end
#1
1!
1(
b1 )
b1 ,
b1 $
b1 &
b1 +
#2
b0 $
b0 &
b0 +
b1 #
b1 %
b1 *
#3
0(
b0 )
b0 ,
0'
1"
b1101111 $
b1101111 &
b1101111 +
b1101111 #
b1101111 %
b1101111 *
#4
0!
1(
b101 )
b101 ,
b101 $
b101 &
b101 +
b0 #
b0 %
b0 *
#5
b11 )
b11 ,
b110010 $
b110010 &
b110010 +
b110001 #
b110001 %
b110001 *
