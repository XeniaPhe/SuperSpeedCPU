$date
	Sun Jan 08 02:15:54 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module twenty_bit_register_tb $end
$var wire 20 ! q [19:0] $end
$var reg 1 " clk $end
$var reg 20 # d [19:0] $end
$var reg 1 $ w $end
$scope module regs $end
$var wire 1 " clk $end
$var wire 20 % d [19:0] $end
$var wire 1 $ w $end
$var wire 20 & q [19:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ' i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 ( d $end
$var wire 1 $ w $end
$var reg 1 ) q $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 * i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 + d $end
$var wire 1 $ w $end
$var reg 1 , q $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 - i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 . d $end
$var wire 1 $ w $end
$var reg 1 / q $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 0 i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 1 d $end
$var wire 1 $ w $end
$var reg 1 2 q $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 3 i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 4 d $end
$var wire 1 $ w $end
$var reg 1 5 q $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 6 i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 7 d $end
$var wire 1 $ w $end
$var reg 1 8 q $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 9 i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 : d $end
$var wire 1 $ w $end
$var reg 1 ; q $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 < i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 = d $end
$var wire 1 $ w $end
$var reg 1 > q $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 ? i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 @ d $end
$var wire 1 $ w $end
$var reg 1 A q $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 B i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 C d $end
$var wire 1 $ w $end
$var reg 1 D q $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 E i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 F d $end
$var wire 1 $ w $end
$var reg 1 G q $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 H i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 I d $end
$var wire 1 $ w $end
$var reg 1 J q $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 K i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 L d $end
$var wire 1 $ w $end
$var reg 1 M q $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 N i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 O d $end
$var wire 1 $ w $end
$var reg 1 P q $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 Q i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 R d $end
$var wire 1 $ w $end
$var reg 1 S q $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 T i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 U d $end
$var wire 1 $ w $end
$var reg 1 V q $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 W i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 X d $end
$var wire 1 $ w $end
$var reg 1 Y q $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 Z i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 [ d $end
$var wire 1 $ w $end
$var reg 1 \ q $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 ] i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 ^ d $end
$var wire 1 $ w $end
$var reg 1 _ q $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 ` i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 a d $end
$var wire 1 $ w $end
$var reg 1 b q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10011 `
b10010 ]
b10001 Z
b10000 W
b1111 T
b1110 Q
b1101 N
b1100 K
b1011 H
b1010 E
b1001 B
b1000 ?
b111 <
b110 9
b101 6
b100 3
b11 0
b10 -
b1 *
b0 '
$end
#0
$dumpvars
0b
0a
0_
0^
0\
0[
0Y
0X
0V
0U
0S
0R
0P
0O
0M
0L
0J
0I
0G
0F
0D
0C
0A
0@
0>
0=
0;
0:
08
17
05
04
02
11
0/
1.
0,
0+
0)
1(
b0 &
b101101 %
1$
b101101 #
0"
b0 !
$end
#5
1)
1/
12
b101101 !
b101101 &
18
1"
#10
0(
1+
01
14
0"
b110110 #
b110110 %
#15
15
02
1,
b110110 !
b110110 &
0)
1"
#20
0+
04
1:
0"
0$
b1100100 #
b1100100 %
#25
1"
#30
1(
0"
1$
b1100101 #
b1100101 %
#35
1;
05
0,
b1100101 !
b1100101 &
1)
1"
#40
0.
11
0"
b1101001 #
b1101001 %
#45
0/
b1101001 !
b1101001 &
12
1"
#50
0(
01
07
0:
0"
0$
b0 #
b0 %
#55
1"
#60
0"
1$
#65
0)
02
08
b0 !
b0 &
0;
1"
#70
0"
