$date
	Thu Jan 05 22:55:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ten_bit_register_tb $end
$var wire 10 ! q [9:0] $end
$var reg 1 " clk $end
$var reg 10 # d [9:0] $end
$var reg 1 $ reset $end
$var reg 1 % w $end
$scope module regs $end
$var wire 1 " clk $end
$var wire 10 & d [9:0] $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var wire 10 ' q [9:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ( i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 ) d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 * q $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 + i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 , d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 - q $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 . i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 / d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 0 q $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 1 i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 2 d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 3 q $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 4 i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 5 d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 6 q $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 7 i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 8 d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 9 q $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 : i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 ; d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 < q $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 = i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 > d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 ? q $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 @ i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 A d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 B q $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 C i $end
$scope module flipflopi $end
$var wire 1 " clk $end
$var wire 1 D d $end
$var wire 1 $ reset $end
$var wire 1 % w $end
$var reg 1 E q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1001 C
b1000 @
b111 =
b110 :
b101 7
b100 4
b11 1
b10 .
b1 +
b0 (
$end
#0
$dumpvars
0E
0D
0B
0A
0?
0>
0<
0;
09
18
06
05
03
12
00
1/
0-
0,
0*
1)
b0 '
b101101 &
1%
1$
b101101 #
0"
b0 !
$end
#1
19
13
10
b101101 !
b101101 '
1*
0$
#2
1"
#3
0"
#4
1"
#5
0"
#6
1"
#7
0"
#8
1"
#9
0"
#10
0*
1-
03
b110110 !
b110110 '
16
0)
1,
02
15
1"
b110110 #
b110110 &
#11
0"
#12
1"
#13
0"
#14
1"
#15
0"
#16
1"
#17
0"
#18
1"
#19
0"
#20
0,
05
1;
1"
0%
b1100100 #
b1100100 &
#21
0"
#22
1"
#23
0"
#24
1"
#25
0"
#26
1"
#27
0"
#28
1"
#29
0"
#30
1*
0-
06
b1100101 !
b1100101 '
1<
1)
1"
1%
b1100101 #
b1100101 &
#31
0"
#32
1"
#33
0"
#34
1"
#35
0"
#36
1"
#37
0"
#38
1"
#39
0"
#40
13
b1101001 !
b1101001 '
00
0/
12
1"
b1101001 #
b1101001 &
#41
0"
#42
1"
#43
0"
#44
1"
#45
0"
#46
1"
#47
0"
#48
1"
#49
0"
#50
0)
02
08
0;
1"
0%
b0 #
b0 &
#51
0"
#52
1"
#53
0"
#54
1"
#55
0"
#56
1"
#57
0"
#58
1"
#59
0"
#60
0<
09
03
b0 !
b0 '
0*
1"
1%
#61
0"
#62
1"
#63
0"
#64
1"
#65
0"
#66
1"
#67
0"
#68
1"
#69
0"
#70
1"
