$date
	Sat Jan 07 07:17:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module instruction_decoder_tb $end
$var wire 1 ! st $end
$var wire 4 " sr2 [3:0] $end
$var wire 4 # sr1 [3:0] $end
$var wire 1 $ push $end
$var wire 1 % pop $end
$var wire 1 & ld $end
$var wire 1 ' jump $end
$var wire 1 ( is_imm $end
$var wire 20 ) imm [19:0] $end
$var wire 1 * halt $end
$var wire 4 + dr [3:0] $end
$var wire 1 , be_select $end
$var wire 1 - be $end
$var wire 3 . alu_select [2:0] $end
$var wire 1 / alu $end
$var wire 10 0 addr [9:0] $end
$var reg 20 1 instruction [19:0] $end
$scope module decoder $end
$var wire 20 2 instruction [19:0] $end
$var wire 4 3 zero_three [3:0] $end
$var wire 7 4 zero_six [6:0] $end
$var wire 10 5 zero_nine [9:0] $end
$var wire 4 6 ten_thirteen [3:0] $end
$var wire 4 7 seven_ten [3:0] $end
$var wire 5 8 opcode [4:0] $end
$var wire 4 9 four_seven [3:0] $end
$var wire 4 : eleven_fourteen [3:0] $end
$var wire 4 ; eight_eleven [3:0] $end
$var reg 10 < addr [9:0] $end
$var reg 1 / alu $end
$var reg 1 = alu_not_imm $end
$var reg 3 > alu_select [2:0] $end
$var reg 1 - be $end
$var reg 1 , be_select $end
$var reg 4 ? dr [3:0] $end
$var reg 2 @ dr_select [1:0] $end
$var reg 1 * halt $end
$var reg 20 A imm [19:0] $end
$var reg 1 ( is_imm $end
$var reg 1 ' jump $end
$var reg 1 & ld $end
$var reg 1 % pop $end
$var reg 1 $ push $end
$var reg 4 B sr1 [3:0] $end
$var reg 3 C sr1_select [2:0] $end
$var reg 4 D sr2 [3:0] $end
$var reg 1 ! st $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
0=
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
0/
b0 .
0-
0,
b0 +
1*
b0 )
0(
0'
0&
0%
0$
b0 #
b0 "
0!
$end
#5
b10010 )
b10010 A
b10010 0
b10010 <
b10 "
b10 D
b1 #
b1 B
b11 C
b10 @
1=
1/
0*
b1 8
b10010 5
b10010 4
b10 3
b1 9
b1000000000010010 1
b1000000000010010 2
#10
b1010 )
b1010 A
b1000001010 0
b1000001010 <
b100 "
b100 D
b100 #
b100 B
b11 +
b11 ?
b10 C
b0 @
1(
0=
1/
b10 8
b1000001010 5
b1010 4
b1010 3
b0 9
b100 7
b1010 ;
b110 6
b11 :
b10001101000001010 1
b10001101000001010 2
#15
b11111111111111100111 )
b11111111111111100111 A
b101100111 0
b101100111 <
b111 "
b111 D
b110 #
b110 B
b101 +
b101 ?
b11 C
b10 @
b1 .
b1 >
1=
0(
1/
b11 8
b101100111 5
b1100111 4
b111 3
b110 9
b1010 7
b101 ;
b1 6
b0 :
b11000010101100111 1
b11000010101100111 2
#20
b1000 )
b1000 A
b10001000 0
b10001000 <
b1001 "
b1001 D
b1001 #
b1001 B
b1000 +
b1000 ?
b10 C
b0 @
1(
0=
1/
b1 .
b1 >
b100 8
b10001000 5
b1000 4
b1000 3
b1000 9
b1001 7
b100 ;
b1000 :
b100100010010001000 1
b100100010010001000 2
#25
b111100 )
b111100 A
b1010111100 0
b1010111100 <
b1100 "
b1100 D
b1011 #
b1011 B
b1010 +
b1010 ?
b11 C
b10 @
1=
0(
1/
b10 .
b10 >
b101 8
b1010111100 5
b111100 4
b1100 3
b1011 9
b101 7
b1010 ;
b10 6
b1 :
b101000101010111100 1
b101000101010111100 2
#30
b110 )
b110 A
b1100000110 0
b1100000110 <
b1110 "
b1110 D
b1110 #
b1110 B
b1101 +
b1101 ?
b10 C
b0 @
1(
0=
1/
b10 .
b10 >
b110 8
b1100000110 5
b110 4
b110 3
b0 9
b1110 7
b1111 ;
b1011 6
b1101 :
b110110111100000110 1
b110110111100000110 2
#35
b1 )
b1 A
b1100000001 0
b1100000001 <
b1 "
b1 D
b0 #
b0 B
b1111 +
b1111 ?
b11 C
b10 @
1=
0(
1/
b11 .
b11 >
b111 8
b1100000001 5
b1 4
b1 3
b11 6
b1 :
b111000111100000001 1
b111000111100000001 2
#40
b100 )
b100 A
b110000100 0
b110000100 <
b11 "
b11 D
b11 #
b11 B
b10 +
b10 ?
b10 C
b0 @
1(
0=
1/
b11 .
b11 >
b1000 8
b110000100 5
b100 4
b100 3
b1000 9
b11 7
b1 ;
b100 6
b10 :
b1000001000110000100 1
b1000001000110000100 2
#45
b11111111111111010110 )
b11111111111111010110 A
b1010110 0
b1010110 <
b110 "
b110 D
b101 #
b101 B
b100 +
b100 ?
b11 C
b10 @
1=
0(
1/
b100 .
b100 >
b1001 8
b1010110 5
b1010110 4
b110 3
b101 9
b1000 7
b100 ;
b1 6
b0 :
b1001000010001010110 1
b1001000010001010110 2
#50
b10 )
b10 A
b10 0
b10 <
b1000 "
b1000 D
b1000 #
b1000 B
b111 +
b111 ?
b10 C
b0 @
1(
0=
1/
b100 .
b100 >
b1010 8
b10 5
b10 4
b10 3
b0 9
b1100 ;
b1111 6
b111 :
b1010011110000000010 1
b1010011110000000010 2
#55
b11111111111111000000 )
b11111111111111000000 A
b1000000 0
b1000000 <
b100 #
b100 B
b1001 +
b1001 ?
b0 C
b1 @
1&
0(
0/
b0 .
b0 >
b1011 8
b1000000 5
b1000000 4
b0 3
b100 9
b100 ;
b1001 6
b100 :
b1011010010001000000 1
b1011010010001000000 2
#60
b100000 )
b100000 A
b100000 0
b100000 <
b0 "
b0 D
b1010 #
b1010 B
b101 +
b101 ?
b1 C
b0 @
1!
0&
b1100 8
b100000 5
b100000 4
b10 9
b0 7
b1000 ;
b1010 6
b101 :
b1100010100000100000 1
b1100010100000100000 2
#65
b1011 )
b1011 A
b1011 0
b1011 <
b1011 #
b1011 B
b0 +
b0 ?
b100 C
1$
0!
b1101 8
b1011 5
b1011 4
b1011 3
b0 9
b0 ;
b0 6
b0 :
b1101000000000001011 1
b1101000000000001011 2
#70
b1100 )
b1100 A
b1100 0
b1100 <
b0 #
b0 B
b1100 +
b1100 ?
b0 C
b11 @
1%
0$
b1110 8
b1100 5
b1100 4
b1100 3
b1110000000000001100 1
b1110000000000001100 2
#75
b11 )
b11 A
b11 0
b11 <
b0 +
b0 ?
b0 @
1'
0%
b1111 8
b11 5
b11 4
b11 3
b1111000000000000011 1
b1111000000000000011 2
#80
b101 )
b101 A
b101 0
b101 <
b1110 "
b1110 D
b1101 #
b1101 B
b1101 +
b1101 ?
1,
1-
0'
b10000 8
b1100000101 5
b101 4
b101 3
b1110 7
b1111 ;
b1011 6
b1101 :
b10000110111100000101 1
b10000110111100000101 2
#85
b111 )
b111 A
b111 0
b111 <
b0 "
b0 D
b1111 #
b1111 B
b1111 +
b1111 ?
0,
1-
b10001 8
b111 5
b111 4
b111 3
b0 7
b1000 ;
b1110 6
b1111 :
b10001111100000000111 1
b10001111100000000111 2
#90
