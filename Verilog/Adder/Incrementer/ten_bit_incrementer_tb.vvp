#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
S_000002bbaa0a0ae0 .scope module, "ten_bit_incrementer_tb" "ten_bit_incrementer_tb" 2 3;
 .timescale 0 0;
v000002bbaa092260_0 .var "a", 9 0;
v000002bbaa0923a0_0 .net "o", 0 0, L_000002bbaa0f8b90;  1 drivers
v000002bbaa0f8af0_0 .net "s", 9 0, L_000002bbaa0f91d0;  1 drivers
S_000002bbaa0a0c70 .scope module, "incr" "ten_bit_incrementer" 2 8, 3 3 0, S_000002bbaa0a0ae0;
 .timescale 0 0;
    .port_info 0 /INPUT 10 "a";
    .port_info 1 /OUTPUT 10 "s";
    .port_info 2 /OUTPUT 1 "o";
v000002bbaa092800_0 .net "a", 9 0, v000002bbaa092260_0;  1 drivers
v000002bbaa092080_0 .net "c", 9 0, L_000002bbaa0f7c90;  1 drivers
v000002bbaa0921c0_0 .net "o", 0 0, L_000002bbaa0f8b90;  alias, 1 drivers
v000002bbaa0928a0_0 .net "s", 9 0, L_000002bbaa0f91d0;  alias, 1 drivers
L_000002bbaa0f8c30 .part L_000002bbaa0f7c90, 0, 1;
L_000002bbaa0f8a50 .part v000002bbaa092260_0, 1, 1;
L_000002bbaa0f9090 .part L_000002bbaa0f7c90, 1, 1;
L_000002bbaa0f9270 .part v000002bbaa092260_0, 2, 1;
L_000002bbaa0f7ab0 .part L_000002bbaa0f7c90, 2, 1;
L_000002bbaa0f7b50 .part v000002bbaa092260_0, 3, 1;
L_000002bbaa0f93b0 .part L_000002bbaa0f7c90, 3, 1;
L_000002bbaa0f9130 .part v000002bbaa092260_0, 4, 1;
L_000002bbaa0f9450 .part L_000002bbaa0f7c90, 4, 1;
L_000002bbaa0f94f0 .part v000002bbaa092260_0, 5, 1;
L_000002bbaa0f9310 .part L_000002bbaa0f7c90, 5, 1;
L_000002bbaa0f8cd0 .part v000002bbaa092260_0, 6, 1;
L_000002bbaa0f96d0 .part L_000002bbaa0f7c90, 6, 1;
L_000002bbaa0f9590 .part v000002bbaa092260_0, 7, 1;
L_000002bbaa0f9630 .part L_000002bbaa0f7c90, 7, 1;
L_000002bbaa0f9770 .part v000002bbaa092260_0, 8, 1;
L_000002bbaa0f7fb0 .part L_000002bbaa0f7c90, 8, 1;
L_000002bbaa0f8370 .part v000002bbaa092260_0, 9, 1;
L_000002bbaa0f8690 .part v000002bbaa092260_0, 0, 1;
LS_000002bbaa0f91d0_0_0 .concat8 [ 1 1 1 1], L_000002bbaa0f9dd0, L_000002bbaa093580, L_000002bbaa092ef0, L_000002bbaa0fa540;
LS_000002bbaa0f91d0_0_4 .concat8 [ 1 1 1 1], L_000002bbaa0f9cf0, L_000002bbaa0fa7e0, L_000002bbaa0f9d60, L_000002bbaa0fa850;
LS_000002bbaa0f91d0_0_8 .concat8 [ 1 1 0 0], L_000002bbaa0f9f20, L_000002bbaa0fa460;
L_000002bbaa0f91d0 .concat8 [ 4 4 2 0], LS_000002bbaa0f91d0_0_0, LS_000002bbaa0f91d0_0_4, LS_000002bbaa0f91d0_0_8;
LS_000002bbaa0f7c90_0_0 .concat8 [ 1 1 1 1], L_000002bbaa0f9e40, L_000002bbaa093120, L_000002bbaa093190, L_000002bbaa0fa700;
LS_000002bbaa0f7c90_0_4 .concat8 [ 1 1 1 1], L_000002bbaa0f9eb0, L_000002bbaa0f9b30, L_000002bbaa0fa770, L_000002bbaa0f9c10;
LS_000002bbaa0f7c90_0_8 .concat8 [ 1 1 0 0], L_000002bbaa0fa8c0, L_000002bbaa0f9f90;
L_000002bbaa0f7c90 .concat8 [ 4 4 2 0], LS_000002bbaa0f7c90_0_0, LS_000002bbaa0f7c90_0_4, LS_000002bbaa0f7c90_0_8;
L_000002bbaa0f8b90 .part L_000002bbaa0f7c90, 9, 1;
S_000002bba9ebd450 .scope generate, "genblk1[1]" "genblk1[1]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08dfa0 .param/l "i" 0 3 15, +C4<01>;
S_000002bba9ebd5e0 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bba9ebd450;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa093580 .functor XOR 1, L_000002bbaa0f8c30, L_000002bbaa0f8a50, C4<0>, C4<0>;
L_000002bbaa093120 .functor AND 1, L_000002bbaa0f8c30, L_000002bbaa0f8a50, C4<1>, C4<1>;
v000002bbaa09b510_0 .net "cout", 0 0, L_000002bbaa093120;  1 drivers
v000002bbaa09cb90_0 .net "i0", 0 0, L_000002bbaa0f8c30;  1 drivers
v000002bbaa09c2d0_0 .net "i1", 0 0, L_000002bbaa0f8a50;  1 drivers
v000002bbaa09cc30_0 .net "s", 0 0, L_000002bbaa093580;  1 drivers
S_000002bbaa062d60 .scope generate, "genblk1[2]" "genblk1[2]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08e0e0 .param/l "i" 0 3 15, +C4<010>;
S_000002bbaa062ef0 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bbaa062d60;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa092ef0 .functor XOR 1, L_000002bbaa0f9090, L_000002bbaa0f9270, C4<0>, C4<0>;
L_000002bbaa093190 .functor AND 1, L_000002bbaa0f9090, L_000002bbaa0f9270, C4<1>, C4<1>;
v000002bbaa09cd70_0 .net "cout", 0 0, L_000002bbaa093190;  1 drivers
v000002bbaa09bab0_0 .net "i0", 0 0, L_000002bbaa0f9090;  1 drivers
v000002bbaa09c190_0 .net "i1", 0 0, L_000002bbaa0f9270;  1 drivers
v000002bbaa09ba10_0 .net "s", 0 0, L_000002bbaa092ef0;  1 drivers
S_000002bbaa09f010 .scope generate, "genblk1[3]" "genblk1[3]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08e220 .param/l "i" 0 3 15, +C4<011>;
S_000002bbaa09f1a0 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bbaa09f010;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa0fa540 .functor XOR 1, L_000002bbaa0f7ab0, L_000002bbaa0f7b50, C4<0>, C4<0>;
L_000002bbaa0fa700 .functor AND 1, L_000002bbaa0f7ab0, L_000002bbaa0f7b50, C4<1>, C4<1>;
v000002bbaa09b970_0 .net "cout", 0 0, L_000002bbaa0fa700;  1 drivers
v000002bbaa09b010_0 .net "i0", 0 0, L_000002bbaa0f7ab0;  1 drivers
v000002bbaa09b0b0_0 .net "i1", 0 0, L_000002bbaa0f7b50;  1 drivers
v000002bbaa09c370_0 .net "s", 0 0, L_000002bbaa0fa540;  1 drivers
S_000002bbaa09f330 .scope generate, "genblk1[4]" "genblk1[4]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08e460 .param/l "i" 0 3 15, +C4<0100>;
S_000002bbaa09f4c0 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bbaa09f330;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa0f9cf0 .functor XOR 1, L_000002bbaa0f93b0, L_000002bbaa0f9130, C4<0>, C4<0>;
L_000002bbaa0f9eb0 .functor AND 1, L_000002bbaa0f93b0, L_000002bbaa0f9130, C4<1>, C4<1>;
v000002bbaa09c550_0 .net "cout", 0 0, L_000002bbaa0f9eb0;  1 drivers
v000002bbaa09c0f0_0 .net "i0", 0 0, L_000002bbaa0f93b0;  1 drivers
v000002bbaa09b150_0 .net "i1", 0 0, L_000002bbaa0f9130;  1 drivers
v000002bbaa09b1f0_0 .net "s", 0 0, L_000002bbaa0f9cf0;  1 drivers
S_000002bbaa09f650 .scope generate, "genblk1[5]" "genblk1[5]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08dd60 .param/l "i" 0 3 15, +C4<0101>;
S_000002bbaa08fbb0 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bbaa09f650;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa0fa7e0 .functor XOR 1, L_000002bbaa0f9450, L_000002bbaa0f94f0, C4<0>, C4<0>;
L_000002bbaa0f9b30 .functor AND 1, L_000002bbaa0f9450, L_000002bbaa0f94f0, C4<1>, C4<1>;
v000002bbaa09c410_0 .net "cout", 0 0, L_000002bbaa0f9b30;  1 drivers
v000002bbaa09b290_0 .net "i0", 0 0, L_000002bbaa0f9450;  1 drivers
v000002bbaa09bc90_0 .net "i1", 0 0, L_000002bbaa0f94f0;  1 drivers
v000002bbaa09bb50_0 .net "s", 0 0, L_000002bbaa0fa7e0;  1 drivers
S_000002bbaa08fd40 .scope generate, "genblk1[6]" "genblk1[6]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08e3a0 .param/l "i" 0 3 15, +C4<0110>;
S_000002bbaa08fed0 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bbaa08fd40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa0f9d60 .functor XOR 1, L_000002bbaa0f9310, L_000002bbaa0f8cd0, C4<0>, C4<0>;
L_000002bbaa0fa770 .functor AND 1, L_000002bbaa0f9310, L_000002bbaa0f8cd0, C4<1>, C4<1>;
v000002bbaa09b3d0_0 .net "cout", 0 0, L_000002bbaa0fa770;  1 drivers
v000002bbaa09c4b0_0 .net "i0", 0 0, L_000002bbaa0f9310;  1 drivers
v000002bbaa09b6f0_0 .net "i1", 0 0, L_000002bbaa0f8cd0;  1 drivers
v000002bbaa09b790_0 .net "s", 0 0, L_000002bbaa0f9d60;  1 drivers
S_000002bbaa090060 .scope generate, "genblk1[7]" "genblk1[7]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08e420 .param/l "i" 0 3 15, +C4<0111>;
S_000002bbaa0901f0 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bbaa090060;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa0fa850 .functor XOR 1, L_000002bbaa0f96d0, L_000002bbaa0f9590, C4<0>, C4<0>;
L_000002bbaa0f9c10 .functor AND 1, L_000002bbaa0f96d0, L_000002bbaa0f9590, C4<1>, C4<1>;
v000002bbaa09b830_0 .net "cout", 0 0, L_000002bbaa0f9c10;  1 drivers
v000002bbaa09b8d0_0 .net "i0", 0 0, L_000002bbaa0f96d0;  1 drivers
v000002bbaa09bd30_0 .net "i1", 0 0, L_000002bbaa0f9590;  1 drivers
v000002bbaa09bdd0_0 .net "s", 0 0, L_000002bbaa0fa850;  1 drivers
S_000002bbaa090380 .scope generate, "genblk1[8]" "genblk1[8]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08de60 .param/l "i" 0 3 15, +C4<01000>;
S_000002bbaa0f7400 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bbaa090380;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa0f9f20 .functor XOR 1, L_000002bbaa0f9630, L_000002bbaa0f9770, C4<0>, C4<0>;
L_000002bbaa0fa8c0 .functor AND 1, L_000002bbaa0f9630, L_000002bbaa0f9770, C4<1>, C4<1>;
v000002bbaa09be70_0 .net "cout", 0 0, L_000002bbaa0fa8c0;  1 drivers
v000002bbaa09bf10_0 .net "i0", 0 0, L_000002bbaa0f9630;  1 drivers
v000002bbaa09bfb0_0 .net "i1", 0 0, L_000002bbaa0f9770;  1 drivers
v000002bbaa09c5f0_0 .net "s", 0 0, L_000002bbaa0f9f20;  1 drivers
S_000002bbaa0f7270 .scope generate, "genblk1[9]" "genblk1[9]" 3 15, 3 15 0, S_000002bbaa0a0c70;
 .timescale 0 0;
P_000002bbaa08e3e0 .param/l "i" 0 3 15, +C4<01001>;
S_000002bbaa0f7590 .scope module, "hai" "half_adder" 3 16, 4 1 0, S_000002bbaa0f7270;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa0fa460 .functor XOR 1, L_000002bbaa0f7fb0, L_000002bbaa0f8370, C4<0>, C4<0>;
L_000002bbaa0f9f90 .functor AND 1, L_000002bbaa0f7fb0, L_000002bbaa0f8370, C4<1>, C4<1>;
v000002bbaa09c690_0 .net "cout", 0 0, L_000002bbaa0f9f90;  1 drivers
v000002bbaa09c730_0 .net "i0", 0 0, L_000002bbaa0f7fb0;  1 drivers
v000002bbaa09c7d0_0 .net "i1", 0 0, L_000002bbaa0f8370;  1 drivers
v000002bbaa09c870_0 .net "s", 0 0, L_000002bbaa0fa460;  1 drivers
S_000002bbaa0f6f50 .scope module, "ha0" "half_adder" 3 10, 4 1 0, S_000002bbaa0a0c70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i0";
    .port_info 1 /INPUT 1 "i1";
    .port_info 2 /OUTPUT 1 "s";
    .port_info 3 /OUTPUT 1 "cout";
L_000002bbaa0faa88 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_000002bbaa0f9dd0 .functor XOR 1, L_000002bbaa0faa88, L_000002bbaa0f8690, C4<0>, C4<0>;
L_000002bbaa0f9e40 .functor AND 1, L_000002bbaa0faa88, L_000002bbaa0f8690, C4<1>, C4<1>;
v000002bbaa09c910_0 .net "cout", 0 0, L_000002bbaa0f9e40;  1 drivers
v000002bbaa091f40_0 .net "i0", 0 0, L_000002bbaa0faa88;  1 drivers
v000002bbaa092b20_0 .net "i1", 0 0, L_000002bbaa0f8690;  1 drivers
v000002bbaa092d00_0 .net "s", 0 0, L_000002bbaa0f9dd0;  1 drivers
    .scope S_000002bbaa0a0ae0;
T_0 ;
    %vpi_call 2 11 "$dumpfile", "ten_bit_incrementer_tb.vcd" {0 0 0};
    %vpi_call 2 12 "$dumpvars", 32'sb00000000000000000000000000000000, S_000002bbaa0a0ae0 {0 0 0};
    %pushi/vec4 0, 0, 10;
    %store/vec4 v000002bbaa092260_0, 0, 10;
    %delay 1, 0;
    %pushi/vec4 1, 0, 10;
    %store/vec4 v000002bbaa092260_0, 0, 10;
    %delay 1, 0;
    %pushi/vec4 2, 0, 10;
    %store/vec4 v000002bbaa092260_0, 0, 10;
    %delay 1, 0;
    %pushi/vec4 1022, 0, 10;
    %store/vec4 v000002bbaa092260_0, 0, 10;
    %delay 1, 0;
    %pushi/vec4 1023, 0, 10;
    %store/vec4 v000002bbaa092260_0, 0, 10;
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    ".\Adder\Incrementer\ten_bit_incrementer_tb.v";
    "./Adder/Incrementer/ten_bit_incrementer.v";
    "./Adder/Half Adder/half_adder.v";
